%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.0-20091004-56-g11921dc
%%CreationDate: Thu May  5 03:44:42 2011
%%Title: /home/fosse/Documents/work/startle optical stimulator/simple 300mA/startle optical simulator-v1.sch
%%Author: (null)
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 500 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
40550 43950 150 0 360 10 darc
40550 43950 50 0 360 10 darc
40500 43800 40500 43500 10 line
gsave
false false false false 208.000000 [(2) ] 0 40550 43600 144.444443 text
grestore
40600 44000 40585 43985 10 line
40600 44000 40900 44000 10 line
gsave
false false false false 208.000000 [(1) ] 0 40750 44050 144.444443 text
grestore
40500 43800 40504 43807 10 line
grestore
gsave
false false false false 260.000000 [(CONN2) ] 0 40400 44800 180.555557 text
grestore
gsave
false false false false 260.000000 [(AMPHENOL_BNC_31-5431) ] 0 40400 44400 180.555557 text
grestore
gsave
false false false false 260.000000 [(AMPHENOL_BNC_31-5431-short) ] 0 40400 44200 180.555557 text
grestore
gsave
false false false false 260.000000 [(Output) ] 0 40400 44600 180.555557 text
grestore
gsave
false true false false 208.000000 [(Designed By: IJS) ] 0 56900 40100 144.444443 text
grestore
gsave
false true false false 208.000000 [(Date: 2006_06_09) ] 0 56900 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(3) ] 0 51500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(1) ] 0 50000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(startle optical simulator-v1.sch) ] 0 49900 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(Startle Optical Simulator 300mA) ] 0 50000 40700 144.444443 text
grestore
gsave
false false false false 208.000000 [(EEF) ] 0 53900 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(Updated 2010_10_09) ] 0 53800 40400 144.444443 text
grestore
gsave
55700 49300 55700 49100 10 line
gsave
false false false false 156.000000 [(3) ] 0 55600 49150 108.333336 text
grestore
55700 48500 55700 48300 10 line
gsave
false false false false 156.000000 [(1) ] 0 55600 48350 108.333336 text
grestore
55600 48801 316 0 360 10 darc
55700 48500 55500 48700 10 line
55700 49100 55500 48900 10 line
55500 49000 55500 48600 10 line
55100 48800 55284 48800 10 line
gsave
false false false false 156.000000 [(2) ] 0 55200 48850 108.333336 text
grestore
55500 48800 55284 48800 10 line
55700 48500 55664 48572 10 line
55700 48500 55628 48536 10 line
55628 48536 55664 48572 10 line
gsave
false false false false 260.000000 [(2N3904) ] 0 56000 48600 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 56000 48800 180.555557 text
grestore
gsave
false false false false 260.000000 [(TO92) ] 0 56000 48400 180.555557 text
grestore
55700 49300 55700 49800 10 line
gsave
55700 49800 55700 50000 10 line
55550 50000 55850 50000 10 line
grestore
gsave
true false false false 260.000000 [(+15V) ] 0 55700 50100 180.555557 text
grestore
gsave
55600 45000 55800 44900 10 line
55800 44900 55600 44800 10 line
55600 44800 55800 44700 10 line
55800 44700 55600 44600 10 line
55600 45000 55800 45100 10 line
55800 45100 55700 45150 10 line
55700 45300 55700 45150 10 line
55700 44400 55700 44552 10 line
55600 44601 55700 44550 10 line
grestore
gsave
false true false false 260.000000 [(R3) ] 0 55500 45000 180.555557 text
grestore
gsave
false true false false 260.000000 [(8.2) ] 0 55500 44800 180.555557 text
grestore
gsave
false true false false 260.000000 [(ACY400) ] 0 55500 44600 180.555557 text
grestore
55700 48300 55700 45300 10 line
55700 43500 55700 44400 10 line
55700 44000 40900 44000 10 line
gsave
55600 43200 55800 43100 10 line
55800 43100 55600 43000 10 line
55600 43000 55800 42900 10 line
55800 42900 55600 42800 10 line
55600 43200 55800 43300 10 line
55800 43300 55700 43350 10 line
55700 43500 55700 43350 10 line
55700 42600 55700 42752 10 line
55600 42801 55700 42750 10 line
grestore
gsave
false true false false 260.000000 [(R7) ] 0 55500 43200 180.555557 text
grestore
gsave
false true false false 260.000000 [(4.7K) ] 0 55500 43000 180.555557 text
grestore
gsave
false true false false 260.000000 [(ACY400) ] 0 55500 42800 180.555557 text
grestore
gsave
55700 42000 55700 42200 10 line
55600 42000 55800 42000 10 line
55655 41950 55745 41950 10 line
55680 41910 55720 41910 10 line
grestore
55700 42600 55700 42200 10 line
gsave
40500 42000 40500 42200 10 line
40600 42000 40400 42000 10 line
40545 41950 40455 41950 10 line
40520 41910 40480 41910 10 line
grestore
40500 42200 40500 43500 10 line
gsave
54900 45800 54800 45600 10 line
54800 45600 54700 45800 10 line
54700 45800 54600 45600 10 line
54600 45600 54500 45800 10 line
54900 45800 55000 45600 10 line
55000 45600 55050 45700 10 line
55200 45700 55050 45700 10 line
54300 45700 54452 45700 10 line
54501 45800 54450 45700 10 line
grestore
gsave
true false false false 260.000000 [(R4) ] 0 54800 46300 180.555557 text
grestore
gsave
true false false false 260.000000 [(100K) ] 0 54800 46100 180.555557 text
grestore
gsave
true false false false 260.000000 [(ACY400) ] 0 54800 45900 180.555557 text
grestore
gsave
54400 47400 54600 47400 10 line
55300 47400 55100 47400 10 line
54800 47600 54800 47200 10 line
54900 47600 54900 47200 10 line
55100 47400 54900 47400 10 line
54800 47400 54600 47400 10 line
grestore
gsave
true false false false 260.000000 [(C2) ] 0 54900 48300 180.555557 text
grestore
gsave
true false false false 260.000000 [(30pF) ] 0 54900 48100 180.555557 text
grestore
gsave
true false false false 260.000000 [(RCY100) ] 0 54900 47700 180.555557 text
grestore
gsave
true false false false 260.000000 [(Ceramic) ] 0 54900 47900 180.555557 text
grestore
55200 45700 55700 45700 10 line
55300 47400 55700 47400 10 line
51200 47400 54400 47400 10 line
50700 45700 54300 45700 10 line
52700 48800 53800 48800 10 line
51700 48600 51200 48600 10 line
51200 45700 51200 48600 10 line
gsave
49400 45100 49400 45300 10 line
49300 45100 49500 45100 10 line
49355 45050 49445 45050 10 line
49380 45010 49420 45010 10 line
grestore
49400 45300 49400 45700 10 line
50400 49000 51700 49000 10 line
50800 47500 50800 49000 10 line
48500 49000 49100 49000 10 line
47500 48800 47000 48800 10 line
47000 48800 47000 48000 10 line
47000 48000 49100 48000 10 line
49100 48000 49100 49600 10 line
gsave
44200 49300 44100 49100 10 line
44100 49100 44000 49300 10 line
44000 49300 43900 49100 10 line
43900 49100 43800 49300 10 line
44200 49300 44300 49100 10 line
44300 49100 44350 49200 10 line
44500 49200 44350 49200 10 line
43600 49200 43752 49200 10 line
43801 49300 43750 49200 10 line
grestore
gsave
true false false false 260.000000 [(R9) ] 0 44100 49800 180.555557 text
grestore
gsave
true false false false 260.000000 [(100K) ] 0 44100 49600 180.555557 text
grestore
gsave
true false false false 260.000000 [(ACY400) ] 0 44100 49400 180.555557 text
grestore
gsave
44900 48100 45100 48000 10 line
45100 48000 44900 47900 10 line
44900 47900 45100 47800 10 line
45100 47800 44900 47700 10 line
44900 48100 45100 48200 10 line
45100 48200 45000 48250 10 line
45000 48400 45000 48250 10 line
45000 47500 45000 47652 10 line
44900 47701 45000 47650 10 line
grestore
gsave
false true false false 260.000000 [(R8) ] 0 44800 48100 180.555557 text
grestore
gsave
false true false false 260.000000 [(30K) ] 0 44800 47900 180.555557 text
grestore
gsave
false true false false 260.000000 [(ACY400) ] 0 44800 47700 180.555557 text
grestore
gsave
45000 46500 45000 46700 10 line
44900 46500 45100 46500 10 line
44955 46450 45045 46450 10 line
44980 46410 45020 46410 10 line
grestore
45000 46700 45000 47500 10 line
44500 49200 47500 49200 10 line
45000 48400 45000 49200 10 line
gsave
40550 49150 150 0 360 10 darc
40550 49150 50 0 360 10 darc
40500 49000 40500 48700 10 line
gsave
false false false false 208.000000 [(2) ] 0 40550 48800 144.444443 text
grestore
40600 49200 40585 49185 10 line
40600 49200 40900 49200 10 line
gsave
false false false false 208.000000 [(1) ] 0 40750 49250 144.444443 text
grestore
40500 49000 40504 49007 10 line
grestore
gsave
false false false false 260.000000 [(CONN1) ] 0 40400 50000 180.555557 text
grestore
gsave
false false false false 260.000000 [(AMPHENOL_BNC_31-5431) ] 0 40400 49600 180.555557 text
grestore
gsave
false false false false 260.000000 [(AMPHENOL_BNC_31-5431-short) ] 0 40400 49400 180.555557 text
grestore
gsave
false false false false 260.000000 [(Input) ] 0 40400 49800 180.555557 text
grestore
40900 49200 43600 49200 10 line
gsave
40500 48000 40500 48200 10 line
40400 48000 40600 48000 10 line
40455 47950 40545 47950 10 line
40480 47910 40520 47910 10 line
grestore
40500 48200 40500 48700 10 line
gsave
46700 47800 46300 47800 10 line
46700 47800 46500 48100 10 line
46500 48100 46300 47800 10 line
46700 48100 46300 48100 10 line
46500 47500 46500 47700 10 line
46500 48400 46500 48200 10 line
46500 48200 46500 48100 10 line
46500 47800 46500 47700 10 line
grestore
gsave
false true false false 260.000000 [(D1) ] 0 46200 48100 180.555557 text
grestore
gsave
false true false false 260.000000 [(1N4148) ] 0 46200 47900 180.555557 text
grestore
gsave
false true false false 260.000000 [(ALF400) ] 0 46200 47700 180.555557 text
grestore
46500 48400 46500 49200 10 line
gsave
46500 46500 46500 46700 10 line
46400 46500 46600 46500 10 line
46455 46450 46545 46450 10 line
46480 46410 46520 46410 10 line
grestore
46500 46700 46500 47500 10 line
52200 49200 52200 49500 10 line
gsave
52200 49500 52200 49700 10 line
52050 49700 52350 49700 10 line
grestore
gsave
true false false false 260.000000 [(+15V) ] 0 52200 49800 180.555557 text
grestore
52200 48400 52200 48100 10 line
gsave
48400 45200 48600 45100 10 line
48600 45100 48400 45000 10 line
48400 45000 48600 44900 10 line
48600 44900 48400 44800 10 line
48400 45200 48600 45300 10 line
48600 45300 48500 45350 10 line
48500 45500 48500 45350 10 line
48500 44600 48500 44752 10 line
48400 44801 48500 44750 10 line
grestore
gsave
false true false false 260.000000 [(R2) ] 0 48300 45200 180.555557 text
grestore
gsave
false true false false 260.000000 [(100K) ] 0 48300 45000 180.555557 text
grestore
gsave
false true false false 260.000000 [(ACY400) ] 0 48300 44800 180.555557 text
grestore
48500 45500 48500 47500 10 line
48500 47500 50800 47500 10 line
48500 44600 48500 44000 10 line
gsave
false false false false 260.000000 [(Note: To keep the current source just slightly unballance ) (between posative and negative feedback we added R6.) ] 0 40500 40500 180.555557 text
grestore
gsave
49100 49600 49100 49800 10 line
49000 49900 49100 49800 10 line
49100 49800 49200 49900 10 line
49000 49900 49100 50000 10 line
49100 50000 49200 49900 10 line
grestore
gsave
true false false false 260.000000 [(TP4) ] 0 49100 50300 180.555557 text
grestore
gsave
true false false false 260.000000 [(Unity) ] 0 49100 50100 180.555557 text
grestore
gsave
46500 44500 46500 44700 10 line
46400 44800 46500 44700 10 line
46500 44700 46600 44800 10 line
46400 44800 46500 44900 10 line
46500 44900 46600 44800 10 line
grestore
gsave
true false false false 260.000000 [(TP7) ] 0 46500 45200 180.555557 text
grestore
gsave
true false false false 260.000000 [(Output) ] 0 46500 45000 180.555557 text
grestore
46500 44500 46500 44000 10 line
gsave
53400 49600 53400 49800 10 line
53300 49900 53400 49800 10 line
53400 49800 53500 49900 10 line
53300 49900 53400 50000 10 line
53400 50000 53500 49900 10 line
grestore
gsave
true false false false 260.000000 [(TP5) ] 0 53400 50300 180.555557 text
grestore
gsave
true false false false 260.000000 [(VDRIVE) ] 0 53400 50100 180.555557 text
grestore
53400 49600 53400 48800 10 line
gsave
47700 49400 47700 48600 10 line
47700 49400 48300 49000 10 line
48300 49000 47700 48600 10 line
47800 49250 47800 49150 10 line
47750 49200 47850 49200 10 line
47750 48800 47850 48800 10 line
47500 49200 47700 49200 10 line
gsave
false true false false 208.000000 [(5) ] 0 47650 49250 144.444443 text
grestore
47500 48800 47700 48800 10 line
gsave
false true false false 208.000000 [(6) ] 0 47650 48850 144.444443 text
grestore
48300 49000 48500 49000 10 line
gsave
false false false false 208.000000 [(7) ] 0 48300 49050 144.444443 text
grestore
48000 49200 48000 49400 10 line
gsave
false false false false 208.000000 [(8) ] 0 48050 49200 144.444443 text
grestore
48000 48800 48000 48600 10 line
gsave
false false false false 208.000000 [(4) ] 0 48050 48700 144.444443 text
grestore
grestore
gsave
false false false false 260.000000 [(U1) ] 0 48200 49600 180.555557 text
grestore
gsave
false false false false 260.000000 [(TL032) ] 0 48195 49395 180.555557 text
grestore
gsave
false false false false 260.000000 [(DIP8) ] 0 48195 49195 180.555557 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 48700 49600 180.555557 text
grestore
gsave
51900 49200 51900 48400 10 line
51900 49200 52500 48800 10 line
52500 48800 51900 48400 10 line
52000 49050 52000 48950 10 line
51950 49000 52050 49000 10 line
51950 48600 52050 48600 10 line
51700 49000 51900 49000 10 line
gsave
false true false false 208.000000 [(3) ] 0 51850 49050 144.444443 text
grestore
51700 48600 51900 48600 10 line
gsave
false true false false 208.000000 [(2) ] 0 51850 48650 144.444443 text
grestore
52500 48800 52700 48800 10 line
gsave
false false false false 208.000000 [(1) ] 0 52500 48850 144.444443 text
grestore
52200 49000 52200 49200 10 line
gsave
false false false false 208.000000 [(8) ] 0 52250 49000 144.444443 text
grestore
52200 48600 52200 48400 10 line
gsave
false false false false 208.000000 [(4) ] 0 52250 48500 144.444443 text
grestore
grestore
gsave
false false false false 260.000000 [(U1) ] 0 52400 49400 180.555557 text
grestore
gsave
false false false false 260.000000 [(TL032) ] 0 52395 49195 180.555557 text
grestore
gsave
false false false false 260.000000 [(DIP8) ] 0 52395 48995 180.555557 text
grestore
gsave
false true false false 260.000000 [(1) ] 0 52900 49400 180.555557 text
grestore
47500 42200 47500 42800 10 line
gsave
47500 42800 47500 43000 10 line
47350 43000 47650 43000 10 line
grestore
gsave
true false false false 260.000000 [(+15V) ] 0 47500 43100 180.555557 text
grestore
gsave
47500 40500 47500 40700 10 line
47400 40500 47600 40500 10 line
47455 40450 47545 40450 10 line
47480 40410 47520 40410 10 line
grestore
47500 41300 47500 40700 10 line
gsave
47500 42200 47500 42000 10 line
47500 41300 47500 41500 10 line
47700 41800 47300 41800 10 line
47700 41700 47300 41700 10 line
47500 41500 47500 41700 10 line
47500 41800 47500 42000 10 line
grestore
gsave
false true false false 260.000000 [(C1) ] 0 47200 42000 180.555557 text
grestore
gsave
false true false false 260.000000 [(0.1uF) ] 0 47200 41800 180.555557 text
grestore
gsave
false true false false 260.000000 [(RCY100) ] 0 47200 41400 180.555557 text
grestore
gsave
false true false false 260.000000 [(Ceramic) ] 0 47200 41600 180.555557 text
grestore
gsave
50100 49100 50000 48900 10 line
50000 48900 49900 49100 10 line
49900 49100 49800 48900 10 line
49800 48900 49700 49100 10 line
50100 49100 50200 48900 10 line
50200 48900 50250 49000 10 line
50400 49000 50250 49000 10 line
49500 49000 49652 49000 10 line
49701 49100 49650 49000 10 line
grestore
gsave
true false false false 260.000000 [(R1) ] 0 50000 49600 180.555557 text
grestore
gsave
true false false false 260.000000 [(100K) ] 0 50000 49400 180.555557 text
grestore
gsave
true false false false 260.000000 [(ACY400) ] 0 50000 49200 180.555557 text
grestore
gsave
52900 46500 52800 46300 10 line
52800 46300 52700 46500 10 line
52700 46500 52600 46300 10 line
52600 46300 52500 46500 10 line
52900 46500 53000 46300 10 line
53000 46300 53050 46400 10 line
53200 46400 53050 46400 10 line
52300 46400 52452 46400 10 line
52501 46500 52450 46400 10 line
grestore
gsave
true false false false 260.000000 [(R6) ] 0 52800 47000 180.555557 text
grestore
gsave
true false false false 260.000000 [(4.7M) ] 0 52800 46800 180.555557 text
grestore
gsave
true false false false 260.000000 [(ACY400) ] 0 52800 46600 180.555557 text
grestore
51200 46400 52300 46400 10 line
53200 46400 53700 46400 10 line
53700 46400 53700 46800 10 line
53700 46800 55700 46800 10 line
gsave
54100 48600 54100 49000 10 line
54100 48600 54400 48800 10 line
54400 48800 54100 49000 10 line
54400 48600 54400 49000 10 line
53800 48800 54000 48800 10 line
54700 48800 54500 48800 10 line
54500 48800 54400 48800 10 line
54100 48800 54000 48800 10 line
grestore
gsave
true false false false 260.000000 [(D1) ] 0 54300 49500 180.555557 text
grestore
gsave
true false false false 260.000000 [(1N4148) ] 0 54300 49300 180.555557 text
grestore
gsave
true false false false 260.000000 [(ALF400) ] 0 54300 49100 180.555557 text
grestore
54700 48800 55100 48800 10 line
49100 49000 49500 49000 10 line
54400 48200 55300 47100 10 line
54400 47100 55300 48200 10 line
gsave
50400 45800 50300 45600 10 line
50300 45600 50200 45800 10 line
50200 45800 50100 45600 10 line
50100 45600 50000 45800 10 line
50400 45800 50500 45600 10 line
50500 45600 50550 45700 10 line
50700 45700 50550 45700 10 line
49800 45700 49952 45700 10 line
50001 45800 49950 45700 10 line
grestore
gsave
true false false false 260.000000 [(R5) ] 0 50300 46300 180.555557 text
grestore
gsave
true false false false 260.000000 [(100K) ] 0 50300 46100 180.555557 text
grestore
gsave
true false false false 260.000000 [(ACY400) ] 0 50300 45900 180.555557 text
grestore
49400 45700 49800 45700 10 line
gsave
52200 48100 52200 47900 10 line
52350 47900 52050 47900 10 line
grestore
gsave
true false false true 260.000000 [(-15V) ] 0 52200 47800 180.555557 text
grestore
newpath
55700 45700
25
0 360 arc
fill
newpath
55700 47400
25
0 360 arc
fill
newpath
55700 46800
25
0 360 arc
fill
newpath
55700 44000
25
0 360 arc
fill
newpath
55700 44000
25
0 360 arc
fill
newpath
55700 44000
25
0 360 arc
fill
newpath
48500 44000
25
0 360 arc
fill
newpath
46500 44000
25
0 360 arc
fill
newpath
55700 45700
25
0 360 arc
fill
newpath
55700 45700
25
0 360 arc
fill
newpath
55700 47400
25
0 360 arc
fill
newpath
55700 47400
25
0 360 arc
fill
newpath
51200 47400
25
0 360 arc
fill
newpath
51200 47400
25
0 360 arc
fill
newpath
51200 45700
25
0 360 arc
fill
newpath
53400 48800
25
0 360 arc
fill
newpath
51200 45700
25
0 360 arc
fill
newpath
51200 47400
25
0 360 arc
fill
newpath
51200 45700
25
0 360 arc
fill
newpath
51200 46400
25
0 360 arc
fill
newpath
50800 49000
25
0 360 arc
fill
newpath
50800 49000
25
0 360 arc
fill
newpath
50800 49000
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
newpath
45000 49200
25
0 360 arc
fill
newpath
46500 49200
25
0 360 arc
fill
newpath
45000 49200
25
0 360 arc
fill
newpath
45000 49200
25
0 360 arc
fill
newpath
46500 49200
25
0 360 arc
fill
newpath
46500 49200
25
0 360 arc
fill
newpath
48500 44000
25
0 360 arc
fill
newpath
48500 44000
25
0 360 arc
fill
newpath
46500 44000
25
0 360 arc
fill
newpath
46500 44000
25
0 360 arc
fill
newpath
53400 48800
25
0 360 arc
fill
newpath
53400 48800
25
0 360 arc
fill
newpath
51200 46400
25
0 360 arc
fill
newpath
51200 46400
25
0 360 arc
fill
newpath
55700 46800
25
0 360 arc
fill
newpath
55700 46800
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
newpath
49100 49000
25
0 360 arc
fill
showpage
%%End
